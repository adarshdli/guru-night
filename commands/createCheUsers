#!/bin/bash

createCheUsers::run(){
  # Check if pre-req commands exists
  hash chectl
  hash jq
  hash http

  NL=$'\n'

  local user_from=$(readopt -f --from)
  if [ -z $user_from ]; then 
     user_from=$USERS_FROM
  fi

  local user_to=$(readopt -t --to)
  if [ -z $user_to ]; then 
     user_to=$USERS_TO
  fi
  
  local user_prefix=$(readopt -p --prefix)
   if [ -z $user_prefix ]; then 
     user_prefix=$USER_PREFIX
  fi
  
  local key_cloak_admin_password=$(oc get -n che deployment keycloak -o jsonpath='{.spec.template.spec.containers[*].env[?(@.name=="KEYCLOAK_PASSWORD")].value}')
  local che_keycloak_url="https://$(oc get routes -n che keycloak -o yaml | yq r - 'spec.host')"
  
  local master_realm_endpoint="$che_keycloak_url/auth/realms/master/protocol/openid-connect/token"
  local che_realm_endpoint="$che_keycloak_url/auth/realms/che/protocol/openid-connect/token"

  for ((i=$user_from; i<=user_to ; i++ ));
  do
    local admin_token=$(http --form POST $master_realm_endpoint \
    grant_type="password" client_id="admin-cli" \
    username="admin" password="$key_cloak_admin_password" | jq -r '.access_token')
    # echo "Keycloak Admin Token : $admin_token"

    local che_user="$user_prefix$i"
    local che_user_password="${WORKSHOP_USER_DEFAULT_PASSWORD}" 
    
    local subject_token=$(oc logout &> /dev/null && \
      oc login -u "$che_user" -p "$che_user_password" "$OPENSHIFT_API_URL" &> /dev/null &&\
      oc whoami --show-token)
      
    #echo "Subject Token: $subject_token"

    local access_token=$(http --form POST $che_realm_endpoint \
    grant_type='urn:ietf:params:oauth:grant-type:token-exchange' \
    client_id="che-public" \
    subject_token="$subject_token" subject_issuer='openshift-v4' \
    subject_token_type='urn:ietf:params:oauth:token-type:access_token' \
    | jq -r '.access_token')

    # echo "Access Token: $access_token"

    if [ ! -z "$access_token" ];
    then 
      echo "Updating user details '$che_user' $NL"
      
      local che_post_url="$che_keycloak_url/auth/admin/realms/che/users"
      local user_id=$(http --headers --body $che_post_url "Authorization:Bearer $admin_token" username=="$che_user" | jq -r '.[0].id')
      # http --verbose --headers --body $che_post_url \
      #  "Authorization:Bearer $admin_token" username=="$che_user"\
      #   | jq -r '.[0].id'
      
      echo "User Id: $user_id"

      local che_put_url="$che_keycloak_url/auth/admin/realms/che/users/$user_id"
      
      http PUT $che_put_url "Authorization:Bearer $admin_token" \
      email="$user_prefix$i@example.com" \
      firstName="$user_prefix" \
      lastName="$i" \
      enabled='true'\
      emailVerified='true'
    fi
    # switch back to cluster admin
    oc logout &> /dev/null
    oc login --username="$OPENSHIFT_ADMIN_USER" --password="$OPENSHIFT_ADMIN_USER_PASSWORD" "$OPENSHIFT_API_URL" &> /dev/null
  done
  
}

createCheUsers::usage(){
   cat <<EOT
  -f --from <user count from>    The starting user count e.g. 1
  -t --to <user count to>        The ending user count e.g. 10
  -p --prefix <userprefix>       The username prefix e.g. user
EOT
}

createCheUsers::description(){
  echo "Creates Che workspace for each workshop user"
}
